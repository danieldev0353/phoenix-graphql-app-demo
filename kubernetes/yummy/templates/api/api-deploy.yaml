apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deploy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: gcr.io/yummy-phoenix-graphql/api:latest
          imagePullPolicy: Always
          env:
            - name: NODE_NAME
              value: 'yummy@127.0.0.1'

            - name: POSTGRES_USER
              value: {{ .Values.postgresql.postgresUser }}

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgres-password

            - name: POSTGRES_DB
              value: {{ .Values.postgresql.postgresDatabase }}

            - name: POSTGRES_HOST
              value: {{ .Release.Name }}-postgresql

            - name: DB_POOL_SIZE
              value: "{{ .Values.api.databasePoolSize }}"

            - name: PUBLIC_HOST
              valueFrom:
                configMapKeyRef:
                  name: yummy-config
                  key: public-host

            - name: PUBLIC_PORT
              valueFrom:
                configMapKeyRef:
                  name: yummy-config
                  key: public-port

            - name: NODE_COOKIE
              valueFrom:
                secretKeyRef:
                  name: api-credentials
                  key: node-cookie

            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: api-credentials
                  key: secret-key-base

            - name: SENDGRID_API_KEY
              valueFrom:
                secretKeyRef:
                  name: api-credentials
                  key: sendgrid-api-key

            - name: S3_KEY
              valueFrom:
                secretKeyRef:
                  name: api-credentials
                  key: s3-key

            - name: S3_SECRET
              valueFrom:
                secretKeyRef:
                  name: api-credentials
                  key: s3-secret

            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: api-credentials
                  key: s3-bucket

          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 15
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
