stages:
  - test
  - release

test:
  image: registry.gitlab.com/matthieusegret/yummy-phoenix-graphql/ci:1.1
  stage: test

  services:
    - postgres:latest

  variables:
    POSTGRES_DB: yummy_graphql_test
    POSTGRES_HOST: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: "postgres"
    MIX_ENV: "test"

  cache:
    untracked: true
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - deps
      - _build
      - client/node_modules
      - client/build

  before_script:
    - fakes3 -r .s3bucket -p 4567 > /dev/null 2>&1 &
    - npm run build
    - npm run test.server  > /dev/null 2>&1 &
    - mix deps.get --only test
    - mix ecto.migrate

  script:
    - mix test

frontend:
  image: docker:stable
  stage: release

  variables:
    CONTAINER_IMAGE: registry.gitlab.com/matthieusegret/yummy-phoenix-graphql/frontend
    DOCKER_DRIVER: overlay2

  services:
  - docker:dind

  before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com

  script:
  - docker pull $CONTAINER_IMAGE:latest || true
  - docker build --cache-from $CONTAINER_IMAGE:latest --tag $CONTAINER_IMAGE:$CI_BUILD_REF --tag $CONTAINER_IMAGE:latest -f dockerfiles/frontend.dockerfile .
  - docker push $CONTAINER_IMAGE:$CI_BUILD_REF
  - docker push $CONTAINER_IMAGE:latest

api:
  image: docker:stable
  stage: release

  variables:
    CONTAINER_IMAGE: registry.gitlab.com/matthieusegret/yummy-phoenix-graphql/api
    DOCKER_DRIVER: overlay2

  services:
  - docker:dind

  before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com

  script:
  - docker pull $CONTAINER_IMAGE:latest || true
  - docker build --cache-from $CONTAINER_IMAGE:latest --tag $CONTAINER_IMAGE:$CI_BUILD_REF --tag $CONTAINER_IMAGE:latest -f dockerfiles/api.dockerfile .
  - docker push $CONTAINER_IMAGE:$CI_BUILD_REF
  - docker push $CONTAINER_IMAGE:latest